When would you want to use a remote repository rather than keeping all your work local?
-if I wanted to make my projects/changes to a project visible to others, while cooperating on projects with other people

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
-to detect if any changes have been made in remote since last time I checked.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
-forks: copy others' repository to my github account; used within remote
-clones: copies a repository's content from remote to local, or within local only; used in remote-local or local-local 
-branches: versions of a file; used to create/work with new versions of a file

What is the benefit of having a copy of the last known state of the remote stored locally?
-it simplifies the workflow, for it enables a few users making updates independently and then merging them into final version in a clean, ordered way (any conflicts are resolved easily)

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
-collaboration would require much more frequent contact between contributors, the project developement would be slower
-easier: no need for understanding how git hub works (no branches, merging etc.)
-harder: communication and cooperation, organizing team work, going back to last working version after mistakes/reaching dead ends, making steady progress in developing a project, bringing new ideas into effect, overall: introducing changes into the project, combining experiments with keeping good pace of work.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
-changes in a branch: when there is a risk of conflicts and my changes are yet to be accepted -> it's communicative and safe while working in a team
-changes in master: when I decide what should be accepted (e.g. it's my project), or maybe in small and simple projects -> it's direct and quick